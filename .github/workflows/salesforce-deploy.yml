name: Salesforce Deployment Workflow

on:
  push:
    branches:
      - main  # Trigger the workflow on push events to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Specifies the runner environment

    steps:
    - uses: actions/checkout@v2  # Checks out the repository code

    - name: Install Salesforce CLI
      run: npm install sfdx-cli --global  # Installs Salesforce CLI globally on the runner

    - name: Authenticate with Dev Sandbox
      run: sfdx auth:jwt:grant --clientid ${{ secrets.SF_DEV_CONSUMER_KEY }} --jwtkeyfile server.key --username ${{ secrets.SF_DEV_HUB_USERNAME }} --setdefaultdevhubusername --instanceurl https://test.salesforce.com
      env:
        SF_DEV_CONSUMER_KEY: ${{ secrets.SF_DEV_CONSUMER_KEY }}
        SF_DEV_HUB_USERNAME: ${{ secrets.SF_DEV_HUB_USERNAME }}

    - name: Deploy to Dev Sandbox
      run: sfdx force:source:deploy -p path/to/your/metadata -u DevOrgAlias

    - name: Authenticate with Test Sandbox
      run: sfdx auth:jwt:grant --clientid ${{ secrets.SF_TEST_CONSUMER_KEY }} --jwtkeyfile server.key --username ${{ secrets.SF_TEST_HUB_USERNAME }} --setdefaultdevhubusername --instanceurl https://test.salesforce.com
      env:
        SF_TEST_CONSUMER_KEY: ${{ secrets.SF_TEST_CONSUMER_KEY }}
        SF_TEST_HUB_USERNAME: ${{ secrets.SF_TEST_HUB_USERNAME }}

    - name: Deploy to Test Sandbox
      run: sfdx force:source:deploy -p path/to/your/metadata -u TestOrgAlias

    - name: Authenticate with Production
      run: sfdx auth:jwt:grant --clientid ${{ secrets.SF_PRODUCTION_CONSUMER_KEY }} --jwtkeyfile server.key --username ${{ secrets.SF_PRODUCTION_USERNAME }} --setdefaultdevhubusername --instanceurl https://login.salesforce.com
      env:
        SF_PRODUCTION_CONSUMER_KEY: ${{ secrets.SF_PRODUCTION_CONSUMER_KEY }}
        SF_PRODUCTION_USERNAME: ${{ secrets.SF_PRODUCTION_USERNAME }}

    - name: Validate Deployment to Production
      run: sfdx force:source:deploy -p path/to/your/metadata -u ProdOrgAlias --checkonly --testlevel RunLocalTests
      # Remove --checkonly for actual deployment after successful validation
